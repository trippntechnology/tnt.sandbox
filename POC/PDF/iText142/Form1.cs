using System;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Windows.Forms;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iText = iTextSharp.text;

namespace iText142
{
	public partial class Form1 : Form
	{
		public Form1()
		{
			InitializeComponent();
		}

		private void Form1_Load(object sender, EventArgs e)
		{
			string appPath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().GetName().CodeBase);

			Document document = new Document(PageSize.LETTER);

			/* chapter14/HeaderFooterExample.java */
			PdfWriter writer = PdfWriter.GetInstance(document, new FileStream("header_footer.pdf", FileMode.Create));
			writer.ViewerPreferences = PdfWriter.PageLayoutSinglePage;
			writer.PageEvent = new HeaderFooterExample("43", "Steven M Tripp");
			document.SetMargins(36, 36, 54, 72);

			document.Open();

			PdfPTable table = new PdfPTable(1);
			table.WidthPercentage = 100;
			table.HeaderRows = 1;
			PdfPCell cell = new PdfPCell(new Paragraph("Header"));
			table.AddCell(cell);

			for (int k = 1; k <= 300; ++k)
			{
				cell = new PdfPCell(new Paragraph("Row" + k));
				table.AddCell(cell);
			}

			document.Add(table);

			document.Close();

			webBrowser1.Navigate(string.Concat(appPath, "\\", @"header_footer.pdf"));
		}

	}

	public class HeaderFooterExample : PdfPageEventHelper
	{
		protected PdfPTable header;
		protected PdfPTable footer;

		public HeaderFooterExample(string number, string name)
		{
			header = new PdfPTable(2);
			header.WidthPercentage = 100;

			iText.Font font = new iText.Font(iText.Font.FontFamily.HELVETICA)	;
			font.SetStyle((int)FontStyle.Bold)	;

			Phrase phrase = new Phrase(number,font);
			PdfPCell cell = new PdfPCell(phrase);
			cell.Border = PdfPCell.BOTTOM_BORDER;
			cell.BorderWidth = 1.5f;
			cell.BorderColor = BaseColor.RED;
			cell.HorizontalAlignment = PdfPCell.ALIGN_LEFT;
			header.AddCell(cell);

			cell.Phrase = new Phrase(name,font);
			cell.HorizontalAlignment = PdfPCell.ALIGN_RIGHT;
			header.AddCell(cell);

			cell = new PdfPCell(new Phrase(" "));
			cell.BorderWidth = 0;
			header.AddCell(cell);
			header.AddCell(cell );

			float[] widths = { 6f, 1, 6f };
			footer = new PdfPTable(widths);
			cell = new PdfPCell(new Phrase("Generated by Landscape Sprinkler Designer"));
			cell.Border = PdfPCell.TOP_BORDER;
			cell.BorderWidth = 1.5f;
			cell.BorderColor = BaseColor.BLUE;

			footer.AddCell(cell);

			cell.Phrase = new Phrase("");
			cell.HorizontalAlignment = PdfPCell.ALIGN_CENTER;
			cell.VerticalAlignment = PdfPCell.ALIGN_MIDDLE;
			footer.AddCell(cell);

			cell.Phrase = new Phrase("Copywrite 2007 Tripp'n Technology");
			cell.HorizontalAlignment = PdfPCell.ALIGN_RIGHT;
			footer.AddCell(cell);
		}

		public override void OnStartPage(PdfWriter writer, Document document)
		{
				PdfContentByte cb = writer.DirectContent;
				document.Add(header);
		}

		public override void OnEndPage(PdfWriter writer, Document document)
		{
			PdfContentByte cb = writer.DirectContent;

			footer.Rows[0].GetCells()[1].Phrase = new Phrase(document.PageNumber.ToString());
			footer.TotalWidth = document.Right - (document.RightMargin);
			footer.WriteSelectedRows(0, -1, document.LeftMargin, document.Bottom - 10, cb);
		}
	}
}
